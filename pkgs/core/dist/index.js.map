{"version":3,"sources":["../src/index.ts"],"sourcesContent":["export type PromiseFn<T = any> = (...args: any[]) => Promise<T> | T\n\nexport type Submodule<Config = any, PreparedContext = any, Context = any, RouteDef = any> = {\n  configFn?(): Config | Promise<Config>,\n  preparedContextFn?(input: { config: Config }): PreparedContext | Promise<PreparedContext>,\n  handlerFn?(input: { config: Config, preparedContext: PreparedContext, handlers: Record<string, unknown> }): Record<string, RouteDef> | Promise<Record<string, RouteDef>>,\n  adaptorFn?(input: { config: Config, preparedContext: PreparedContext, router: Record<string, RouteDef> }): Promise<void>\n}"],"mappings":";;;;;;;;;;;;;;;AAAA;AAAA;","names":[]}